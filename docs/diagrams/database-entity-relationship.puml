@startuml database-entity-relationship
!theme plain

title Arthur's Life App - Database Entity Relationship Diagram

!define ENTITY entity

ENTITY User {
  * id : String (UUID) <<PK>>
  --
  * name : String
  * role : String (CHILD, CAREGIVER, ADMIN)
  * tokenBalance : Int
  * level : Int (default: 1)
  * experiencePoints : Int (default: 0)
  --
  familyId : String <<FK>>
  pinHash : String (nullable, BCrypt)
  email : String (nullable)
  age : Int (nullable)
  avatar : String (nullable)
  themePreference : String (nullable)
  accessibilitySettings : String (nullable, JSON)
  languagePreference : String (nullable)
  lastLoginAt : Long (nullable)
  isActive : Boolean (default: true)
  --
  * createdAt : Long (timestamp)
}

ENTITY Family {
  * id : String (UUID) <<PK>>
  --
  * name : String
  * adminUserId : String <<FK>>
  settings : String (JSON, family-wide settings)
  --
  * createdAt : Long (timestamp)
  * updatedAt : Long (timestamp)
}

ENTITY FamilyMembership {
  * id : String (UUID) <<PK>>
  --
  * familyId : String <<FK>>
  * userId : String <<FK>>
  * role : String (ADMIN, PARENT, CHILD)
  permissions : String (JSON, specific permissions)
  childAccessRights : String (JSON, children this user can manage)
  --
  * joinedAt : Long (timestamp)
}

ENTITY Task {
  * id : String (UUID) <<PK>>
  --
  * title : String
  * category : String (PersonalCare, HouseholdChores, Homework, SocialSkills, Exercise, Creative, Other)
  * difficulty : String (EASY, MEDIUM, HARD, EXPERT)
  * tokenReward : Int (calculated based on difficulty)
  * assignedUserId : String <<FK>>
  * createdByUserId : String <<FK>>
  * status : String (ACTIVE, PAUSED, ARCHIVED, DRAFT)
  --
  description : String (nullable)
  instructions : String (nullable)
  timeEstimate : Int (nullable, in minutes)
  preferredCompletionTime : String (nullable)
  isRecurring : Boolean (default: false)
  recurringPattern : String (nullable, DAILY, WEEKLY, WEEKDAYS, WEEKENDS, CUSTOM)
  --
  * createdAt : Long (timestamp)
  * updatedAt : Long (timestamp)
}

ENTITY TaskCompletion {
  * id : String (UUID) <<PK>>
  --
  * taskId : String <<FK>>
  * userId : String <<FK>>
  * completedAt : Long (timestamp)
  * tokensEarned : Int
  * isValidated : Boolean (default: true)
  --
  completionNotes : String (nullable)
  timeDurationMinutes : Int (nullable)
  validatedByUserId : String (nullable) <<FK>>
}

ENTITY TokenTransaction {
  * id : String (UUID) <<PK>>
  --
  * userId : String <<FK>>
  * amount : Int
  * transactionType : String (EARNED, SPENT, BONUS, PENALTY, TRANSFER)
  * source : String (TASK_COMPLETION, BEHAVIOR_REWARD, DAILY_BONUS, ACHIEVEMENT_UNLOCK, CAREGIVER_AWARD, STREAK_BONUS, REWARD_PURCHASE, MANUAL_ADJUSTMENT)
  * description : String
  * timestamp : Long
  * balanceAfter : Int
  --
  relatedTaskId : String (nullable) <<FK>>
  relatedRewardId : String (nullable) <<FK>>
  relatedAchievementId : String (nullable) <<FK>>
  issuerUserId : String (nullable) <<FK>>
}

ENTITY Reward {
  * id : String (UUID) <<PK>>
  --
  * title : String
  * description : String
  * category : String (ENTERTAINMENT, TREATS, ACTIVITIES, PRIVILEGES, TOYS, EXPERIENCES)
  * tokenCost : Int
  * isAvailable : Boolean (default: true)
  * createdByUserId : String <<FK>>
  * isCustom : Boolean (default: false)
  * approvalRequired : Boolean (default: false)
  --
  imageUrl : String (nullable)
  levelRequirement : Int (nullable)
  redemptionLimit : Int (nullable)
  expirationDate : Long (nullable)
  fulfillmentInstructions : String (nullable)
  --
  * createdAt : Long (timestamp)
  * updatedAt : Long (timestamp)
}

ENTITY RewardRedemption {
  * id : String (UUID) <<PK>>
  --
  * rewardId : String <<FK>>
  * userId : String <<FK>>
  * tokensSpent : Int
  * redemptionAt : Long (timestamp)
  * status : String (PENDING, APPROVED, FULFILLED, CANCELLED)
  --
  approvedByUserId : String (nullable) <<FK>>
  approvedAt : Long (nullable)
  fulfilledAt : Long (nullable)
  notes : String (nullable)
  satisfactionRating : Int (nullable, 1-5)
}

ENTITY Achievement {
  * id : String (UUID) <<PK>>
  --
  * name : String
  * description : String
  * category : String (DAILY, WEEKLY, MILESTONE, SPECIAL, STREAK)
  * tokenReward : Int
  * requirement : String (JSON, achievement criteria)
  * badgeImageUrl : String
  * isGlobal : Boolean (default: true)
  * celebrationLevel : String (COMMON, RARE, EPIC, LEGENDARY)
  --
  unlockConditions : String (JSON)
  --
  * createdAt : Long (timestamp)
}

ENTITY UserAchievement {
  * id : String (UUID) <<PK>>
  --
  * userId : String <<FK>>
  * achievementId : String <<FK>>
  * progress : Int (current progress value)
  * targetValue : Int (required value for completion)
  * isCompleted : Boolean (default: false)
  --
  completedAt : Long (nullable)
  currentStreak : Int (nullable, for streak-based achievements)
  lastProgressAt : Long (nullable)
}

ENTITY BackupRecord {
  * id : String (UUID) <<PK>>
  --
  * familyId : String <<FK>>
  * backupDate : Long (timestamp)
  * dataVersion : String
  * encryptionInfo : String (JSON)
  * sizeBytes : Long
  * backupType : String (AUTOMATIC, MANUAL, MIGRATION, EMERGENCY)
  * includedCategories : String (JSON array)
  * verificationHash : String
  * storageLocation : String
}

' Family Relationships
User }o--|| Family : "belongs to (primary)"
Family ||--o{ FamilyMembership : "has members"
User ||--o{ FamilyMembership : "member of families"
Family ||--o{ BackupRecord : "has backups"
Family ||--o| User : "administered by"

' Task Relationships
User ||--o{ Task : "assigned tasks"
User ||--o{ Task : "created tasks"
User ||--o{ TaskCompletion : "completed tasks"
Task ||--o{ TaskCompletion : "completions"
User ||--o{ TaskCompletion : "validates completions"

' Token Economy Relationships
User ||--o{ TokenTransaction : "has transactions"
Task ||--o{ TokenTransaction : "generates transactions"
Reward ||--o{ TokenTransaction : "spending transactions"
Achievement ||--o{ TokenTransaction : "reward transactions"
User ||--o{ TokenTransaction : "issued by"

' Reward System Relationships
User ||--o{ Reward : "creates rewards"
User ||--o{ RewardRedemption : "redeems rewards"
Reward ||--o{ RewardRedemption : "redemptions"
User ||--o{ RewardRedemption : "approves redemptions"

' Achievement System Relationships
User ||--o{ UserAchievement : "user achievements"
Achievement ||--o{ UserAchievement : "earned by users"

' Composite Relationships Notes
note bottom of User : "Central entity with role-based access:\n- CHILD: Limited permissions\n- CAREGIVER: Management permissions\n- ADMIN: Full system access"

note bottom of TokenTransaction : "Immutable audit trail of all token movements\nwith integrity verification and balance tracking"

note bottom of Task : "Supports recurring tasks with flexible patterns\nand difficulty-based token rewards"

note bottom of Achievement : "Gamification system with streak tracking\nand celebration levels for user engagement"

note bottom of Family : "Multi-family support with role-based permissions\nand family-wide settings management"

@enduml